/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ALayoutImport } from './routes/a/_layout'
import { Route as ALayoutSettingsIndexImport } from './routes/a/_layout/settings/index'
import { Route as ALayoutSelectionIndexImport } from './routes/a/_layout/selection/index'
import { Route as ALayoutDirectoryIndexImport } from './routes/a/_layout/directory/index'

// Create Virtual Routes

const AImport = createFileRoute('/a')()
const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const ForgotLazyImport = createFileRoute('/forgot')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ARoute = AImport.update({
  path: '/a',
  getParentRoute: () => rootRoute,
} as any)

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForgotLazyRoute = ForgotLazyImport.update({
  path: '/forgot',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/forgot.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ALayoutRoute = ALayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ARoute,
} as any)

const ALayoutSettingsIndexRoute = ALayoutSettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => ALayoutRoute,
} as any)

const ALayoutSelectionIndexRoute = ALayoutSelectionIndexImport.update({
  path: '/selection/',
  getParentRoute: () => ALayoutRoute,
} as any)

const ALayoutDirectoryIndexRoute = ALayoutDirectoryIndexImport.update({
  path: '/directory/',
  getParentRoute: () => ALayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/forgot': {
      id: '/forgot'
      path: '/forgot'
      fullPath: '/forgot'
      preLoaderRoute: typeof ForgotLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/a': {
      id: '/a'
      path: '/a'
      fullPath: '/a'
      preLoaderRoute: typeof AImport
      parentRoute: typeof rootRoute
    }
    '/a/_layout': {
      id: '/a/_layout'
      path: '/a'
      fullPath: '/a'
      preLoaderRoute: typeof ALayoutImport
      parentRoute: typeof ARoute
    }
    '/a/_layout/directory/': {
      id: '/a/_layout/directory/'
      path: '/directory'
      fullPath: '/a/directory'
      preLoaderRoute: typeof ALayoutDirectoryIndexImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/selection/': {
      id: '/a/_layout/selection/'
      path: '/selection'
      fullPath: '/a/selection'
      preLoaderRoute: typeof ALayoutSelectionIndexImport
      parentRoute: typeof ALayoutImport
    }
    '/a/_layout/settings/': {
      id: '/a/_layout/settings/'
      path: '/settings'
      fullPath: '/a/settings'
      preLoaderRoute: typeof ALayoutSettingsIndexImport
      parentRoute: typeof ALayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ForgotLazyRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  ARoute: ARoute.addChildren({
    ALayoutRoute: ALayoutRoute.addChildren({
      ALayoutDirectoryIndexRoute,
      ALayoutSelectionIndexRoute,
      ALayoutSettingsIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/forgot",
        "/login",
        "/register",
        "/a"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/forgot": {
      "filePath": "forgot.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/a": {
      "filePath": "a",
      "children": [
        "/a/_layout"
      ]
    },
    "/a/_layout": {
      "filePath": "a/_layout.tsx",
      "parent": "/a",
      "children": [
        "/a/_layout/directory/",
        "/a/_layout/selection/",
        "/a/_layout/settings/"
      ]
    },
    "/a/_layout/directory/": {
      "filePath": "a/_layout/directory/index.tsx",
      "parent": "/a/_layout"
    },
    "/a/_layout/selection/": {
      "filePath": "a/_layout/selection/index.tsx",
      "parent": "/a/_layout"
    },
    "/a/_layout/settings/": {
      "filePath": "a/_layout/settings/index.tsx",
      "parent": "/a/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
